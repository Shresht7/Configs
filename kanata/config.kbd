#|
The configuration file must have exactly one `defsrc`. This defines the order of keys
that the `deflayer` entries will operate on.

It should be noted that the `defsrc` entry is treated as a long sequence;
The amount of whitespace (spaces, tabs, newlines) are not relevant. You may use
spaces, tabs, or newlines however you like to visually format `defsrc` to your liking.

Reference: https://github.com/jtroo/kanata/blob/main/docs/config.adoc#defsrc
|#
(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rmet rctl
)



#|
The configuration must have atleast one `deflayer`. This maps how each physical key mapped
in the `defsrc` behaves when kanata runs.

Reference: https://github.com/jtroo/kanata/blob/main/docs/config.adoc#deflayer
|#
(deflayer qwerty
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc 
  @tab q    w    e    r    t    y    u    i    o    p    [    ]    \ 
  @cap a    s    d    f    g    h    j    k    l    ;    '    @ret 
  lsft z    x    c    v    b    n    m    ,    .    /    rsft 
  lctl lmet lalt           spc            ralt rmet rctl
)

;; The `nav` layer remaps the WASD and IJKL keys to the arrows keys
(deflayermap nav
  w up
  a left
  s down
  d right
  q pgup
  e pgdn
  f home
  g end

  i up
  j left
  k down
  l right
  u pgup
  o pgdn 
  h home
  ; end

  caps @navcap
)

(defvar
  tap-time 100 
  hold-time 150 
)

(defalias
  ;; The ` and ins keys switches to the n·∏çavigation layer when pressed
  nav (layer-switch nav)
  qwerty (layer-switch qwerty)

  ;; `Caps-Lock` behaves as `Esc` on tap and as `LCtrl` when held down, and `Hyper` when held beyond the timeout
  cap (tap-hold-press $tap-time $hold-time (tap-dance 200 (esc @nav)) lctrl)
  navcap (tap-hold-press $tap-time $hold-time (tap-dance 200 (esc @qwerty)) lctrl)
  ;; `Enter` behaves as is when tapped but as `RCtrl` when held down
  ret (tap-hold-press $tap-time $hold-time ret rctl)

 ;; `Tab` behaves normally when tapped once, but acts like end when tapped twice in quick sucession
  tab (tap-dance 150 (tab end)) 
)
